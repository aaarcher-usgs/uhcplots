% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uhcdensplot.R
\name{uhcdensplot}
\alias{uhcdensplot}
\title{uhcdensplot}
\usage{
uhcdensplot(densdat, densrand, includeAvail = F, densavail = NULL,
  xl = NULL, yl = NULL, includeLegend = T)
}
\arguments{
\item{densdat}{The kernel density estimates of observed points in the test
data set}

\item{densrand}{The predicted kernel density estimates of simulated data
points}

\item{includeAvail}{An indicator determining whether the distribution of
the available locations should be drawn on the plot}

\item{densavail}{The kernel density estimates of available points in the
test data set}

\item{xl}{The x-axis limits (can be user supplied)}

\item{yl}{The y-axis limits (can be user supplied)}

\item{includeLegend}{An indicator determining whether the legend should
be displayed.}
}
\value{
A plot with a 95% simulation envelope (grey band) of the predicted
density estimates for simulated data points and kernel density estimates of
the environmental characteristics associated with the observed locations
(red dashed line) and the available locations (black line).
}
\description{
\code{uhcdensplot} creates UHC plots
}
\details{
This function plots the density of the environmental
characteristics at the observed locations in the test data set, $f^u(z)$,
along with a simulation envelope for $f^U(z)$ created by randomly choosing
locations in the test data using the \code{uhcsim} or \code{uhcsimstrat}
function.
}
\examples{
# Simulate training data for the non-linear example
nonlinear.train <- uhcdatasimulator(nused = 100,
    navail = 10000,
    betas = c(2,-1),
    ntemp = 1000000,
    example = "non-linear")

# Simulate test data for the non-linear example
nonlinear.test <- uhcdatasimulator(nused = 100,
    navail = 10000,
    betas = c(2,-1),
    ntemp = 1000000,
    example = "non-linear")

# Fit GLM with quadratic relationship
train.correct <- glm(y~temp + I(temp^2),
   family = binomial,
   data = nonlinear.train)

# Fit GLM with linear (misspecified) relationship
train.misspec <- glm(y~temp,
   family = binomial,
   data = nonlinear.train)

# Simulate data for quadratic model
xhat.correct <- uhcsim(nsims = 1000,
   nused_test = 100,
   xmat = model.matrix(y~temp + I(temp^2), data = nonlinear.test)[,-1],
   fit_rsf = train.correct,
   z = as.matrix(nonlinear.test[,"temp"]))

# Simulate data for linear (misspecified) model
xhat.misspec <- uhcsim(nsims = 1000,
   nused_test = 100,
   xmat = as.matrix(model.matrix(y~temp, data = nonlinear.test)[,2]),
   fit_rsf = train.misspec,
   z = as.matrix(nonlinear.test[,"temp"]))

# Get density estimates for quadratic model
denshats.correct <- uhcdenscalc(rand_sims = xhat.correct[,,1],
   dat = subset(nonlinear.test, y==1, select="temp"),
   avail = subset(nonlinear.test, y==0, select="temp"))

# Get density estimates for linear (misspecified) model
denshats.misspec <- uhcdenscalc(rand_sims = xhat.misspec[,,1],
   dat = subset(nonlinear.test, y==1, select="temp"),
   avail = subset(nonlinear.test, y==0, select="temp"))

# Create a UHC plot for the quadratic model
uhcdensplot(densdat = denshats.correct$densdat,
   densrand = denshats.correct$densrand,
   includeAvail = TRUE,
   densavail = denshats.correct$densavail,
   includeLegend = TRUE)

# Create a UHC plot for the linear (misspecified) model
uhcdensplot(densdat = denshats.misspec$densdat,
   densrand = denshats.misspec$densrand,
   includeAvail = TRUE,
   densavail = denshats.misspec$densavail,
   includeLegend = TRUE)
}
\seealso{
Full archive of the data and code necessary to replicate the
manuscript at \url{http://doi.org/10.13020/D6T590}.
}

